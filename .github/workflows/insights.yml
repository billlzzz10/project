name: Project Insights

on:
  schedule:
    - cron: '0 8 * * 1'  # Weekly on Monday at 8 AM UTC
  workflow_dispatch:

permissions:
  contents: read
  issues: read
  pull-requests: read
  actions: read

jobs:
  generate-insights:
    name: Generate Project Insights
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Generate Project Metrics
        uses: actions/github-script@v7
        with:
          script: |
            // Get repository stats
            const { data: repo } = await github.rest.repos.get({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            // Get issues and PRs
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 100
            });
            
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'all',
              per_page: 100
            });
            
            // Get workflow runs
            const { data: workflows } = await github.rest.actions.listRepoWorkflows({
              owner: context.repo.owner,
              repo: context.repo.repo
            });
            
            // Calculate metrics
            const openIssues = issues.filter(issue => issue.state === 'open' && !issue.pull_request).length;
            const closedIssues = issues.filter(issue => issue.state === 'closed' && !issue.pull_request).length;
            const openPRs = prs.filter(pr => pr.state === 'open').length;
            const mergedPRs = prs.filter(pr => pr.merged_at).length;
            const contributors = [...new Set(issues.map(issue => issue.user.login))].length;
            
            // Create insights report
            const report = `# 📊 AI Business App - Weekly Project Insights
            
            *Generated on ${new Date().toLocaleDateString()}*
            
            ## 🏆 Repository Overview
            - **Stars**: ${repo.stargazers_count} ⭐
            - **Forks**: ${repo.forks_count} 🍴
            - **Watchers**: ${repo.subscribers_count} 👀
            - **Language**: ${repo.language}
            - **Size**: ${(repo.size / 1024).toFixed(1)} MB
            
            ## 📈 Activity Metrics
            - **Open Issues**: ${openIssues} 📋
            - **Closed Issues**: ${closedIssues} ✅
            - **Open Pull Requests**: ${openPRs} 🔄
            - **Merged Pull Requests**: ${mergedPRs} ✨
            - **Contributors**: ${contributors} 👥
            
            ## 🔧 Workflows
            - **Total Workflows**: ${workflows.total_count}
            - **Active Workflows**: ${workflows.workflows.filter(w => w.state === 'active').length}
            
            ## 📊 Health Score
            ${openIssues === 0 ? '🟢' : openIssues < 10 ? '🟡' : '🔴'} **Issue Management**: ${openIssues} open issues
            ${openPRs === 0 ? '🟢' : openPRs < 5 ? '🟡' : '🔴'} **PR Management**: ${openPRs} open PRs
            ${repo.stargazers_count > 10 ? '🟢' : repo.stargazers_count > 5 ? '🟡' : '🔴'} **Community Interest**: ${repo.stargazers_count} stars
            
            ## 🎯 Recommendations
            ${openIssues > 10 ? '- Consider triaging and closing stale issues\n' : ''}
            ${openPRs > 5 ? '- Review and merge pending pull requests\n' : ''}
            ${repo.stargazers_count < 10 ? '- Improve documentation and promote the project\n' : ''}
            ${contributors < 5 ? '- Encourage community contributions\n' : ''}
            
            ## 🚀 Recent Activity
            ### Latest Issues
            ${issues.slice(0, 5).map(issue => `- [${issue.title}](${issue.html_url}) by @${issue.user.login}`).join('\n')}
            
            ### Latest PRs
            ${prs.slice(0, 3).map(pr => `- [${pr.title}](${pr.html_url}) by @${pr.user.login}`).join('\n')}
            
            ---
            *This report is generated automatically every Monday. Check back next week for updates!*`;
            
            // Create or update insights issue
            const { data: existingIssues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'insights,automated',
              state: 'open'
            });
            
            if (existingIssues.length > 0) {
              // Update existing insights issue
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: existingIssues[0].number,
                title: `📊 Weekly Project Insights - ${new Date().toLocaleDateString()}`,
                body: report
              });
              console.log('Updated existing insights issue');
            } else {
              // Create new insights issue
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `📊 Weekly Project Insights - ${new Date().toLocaleDateString()}`,
                body: report,
                labels: ['insights', 'automated', 'documentation']
              });
              console.log('Created new insights issue');
            }